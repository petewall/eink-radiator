# resource_types:
#   - name: pull-request
#     type: docker-image
#     source:
#       repository: teliaoss/github-pr-resource

resources:
  - name: source
    type: git
    icon: github
    source:
      uri: git@github.com:petewall/eink-radiator.git
      branch: master
      ignore_paths:
        - ci/*
        - ci/**
      private_key: ((github-repo-key))

  - name: testing-image-source
    type: git
    icon: github
    source:
      uri: git@github.com:petewall/eink-radiator.git
      branch: master
      paths:
        - ci/Dockerfile
      private_key: ((github-repo-key))
      
  - name: testing-image
    type: docker-image
    icon: docker
    source:
      repository: petewall/eink-radiator-test
      username: ((dockerhub-username))
      password: ((dockerhub-password))

  # - name: pull-requests
  #   type: pull-request
  #   source:
  #     repository: petewall/eink-radiator
  #     access_token: ((github-access-token))

jobs:
  - name: build-testing-image
    plan:
      - get: testing-image-source
        trigger: true
      - put: testing-image
        params:
          build: testing-image-source/ci
      - task: check-chromedriver-versions
        image: testing-image
        config:
          platform: linux
          run:
            path: bash
            args:
              - -exc
              - |
                chromedriver_version=$(chromedriver --version | cut -d" " -f2 | cut -d"." -f1)
                google_chrome_version=$(google-chrome --version | cut -d" " -f3 | cut -d"." -f1)
                test "${chromedriver_version}" == "${google_chrome_version}"

  # - name: lint-javascript
  #   plan:
  #     - get: source
  #       trigger: true
  #     - task: test
  #       config:
  #         platform: linux
  #         image_resource:
  #           type: docker-image
  #           source:
  #             repository: node
  #             tag: 14
  #         inputs:
  #           - name: source
  #         run:
  #           dir: source
  #           path: make
  #           args: [lint-js]

  - name: lint-python
    plan:
      - in_parallel:
        - get: testing-image
          passed:
            - build-testing-image
        - get: source
          trigger: true
      - task: test
        image: testing-image
        config:
          platform: linux
          inputs:
            - name: source
          run:
            dir: source
            path: make
            args: [lint]

  # - name: test
  #   plan:
  #     - in_parallel:
  #       - get: feature-test-image
  #         passed:
  #           - lint-python
  #       - get: source
  #         passed:
  #           - lint-javascript
  #           - lint-python
  #         trigger: true
  #     - task: test
  #       image: feature-test-image
  #       config:
  #         platform: linux
  #         inputs:
  #           - name: source
  #         params:
  #           CI: true
  #         run:
  #           dir: source
  #           path: make
  #           args: [test]

  # - name: build-image
  #   plan:
  #     - get: source
  #       trigger: true
  #       passed:
  #         - test
  #     - put: image
  #       params:
  #         build: source
  #         cache: true

  # - name: test-pull-request
  #   plan:
  #     - get: feature-test-image
  #       passed:
  #         - build-feature-test-image
  #     - get: source
  #       resource: pull-requests
  #       trigger: true
  #       version: every
  #       params:
  #         integration_tool: rebase
  #     - put: pull-requests
  #       params:
  #         path: source
  #         status: pending

  #     - task: test
  #       image: feature-test-image
  #       config:
  #         platform: linux
  #         inputs:
  #           - name: source
  #         params:
  #           CI: true
  #         run:
  #           dir: source
  #           path: make
  #           args: [test]
  #       on_failure:
  #         put: pull-requests
  #         params:
  #           path: source
  #           status: failure
  #     - put: pull-requests
  #       params:
  #         path: source
  #         status: success
