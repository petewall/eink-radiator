#@ load("@ytt:data", "data")
---
resource_types:
- name: pull-request
  type: registry-image
  source:
    repository: teliaoss/github-pr-resource
    username: ((dockerhub.username))
    password: ((dockerhub.password))

resources:
#@ for component in data.values.components:
- name: #@ component.name
  type: git
  icon: github
  source:
    uri: #@ "git@github.com:" + component.repo.owner + "/" + component.repo.name
    branch: #@ component.branch
    private_key: ((github.private_key))

- name: #@ component.name + "-pull-requests"
  type: pull-request
  icon: github
  check_every: 1h
  source:
    repository: #@ component.repo.owner + "/" + component.repo.name
    access_token: ((github.access_token))

- name: #@ component.name + "-release"
  type: github-release
  icon: github
  source:
    owner: #@ component.repo.owner
    repository: #@ component.repo.name
    access_token: ((github.access_token))

- name: #@ component.name + "-version"
  type: semver
  icon: github
  source:
    driver: git
    commit_message: "[ci skip] bump version to %version%"
    uri: #@ "git@github.com:" + component.repo.owner + "/" + component.repo.name + ".git"
    branch: #@ component.branch
    file: version
    private_key: ((github.private_key))
#@ end

- name: python
  type: registry-image
  icon: language-python
  source:
    repository: python
    tag: 3.9
    username: ((dockerhub.username))
    password: ((dockerhub.password))

- name: golang
  type: registry-image
  icon: language-go
  source:
    repository: golang
    tag: 1.19
    username: ((dockerhub.username))
    password: ((dockerhub.password))

groups:
- name: all
  jobs:
#@ for component in data.values.components:
  - #@ "test-" + component.name
  - #@ "release-" + component.name
  - #@ "test-" + component.name + "-pr"
#@ end

#@ for component in data.values.components:
- name: #@ component.name
  jobs:
  - #@ "test-" + component.name
  - #@ "release-" + component.name
  - #@ "test-" + component.name + "-pr"
#@ end


jobs:
#@ for component in data.values.components:
- name: #@ "test-" + component.name
  plan:
  - in_parallel:
    - get: source
      resource: #@ component.name
      trigger: true
    - get: #@ component.language
  - task: lint
    image: #@ component.language
    config:
      platform: linux
      inputs:
        - name: source
      run:
        dir: source
        path: make
        args: [lint]
  - task: test
    image: #@ component.language
    config:
      platform: linux
      inputs:
        - name: source
      #@ if/end hasattr(component, 'env'):
      params: #@ component.env
      run:
        dir: source
        path: make
        args: [test]

- name: #@ "release-" + component.name
  plan:
    - in_parallel:
      - get: source
        resource: #@ component.name
        passed:
          - #@ "test-" + component.name
        trigger: true
      - get: version
        resource: #@ component.name + "-version"
      - get: #@ component.language
        passed:
          - #@ "test-" + component.name
    #@ if component.buildable:
    - task: build
      image: #@ component.language
      config:
        platform: linux
        inputs:
          - name: source
          - name: version
        outputs:
          - name: build
        run:
          dir: source
          path: bash
          args:
            - -exc
            - |
              export VERSION=$(cat ../version/version)
              make build-all
              mv build/* ../build/
    #@ end
    - put: version
      resource: #@ component.name + "-version"
      inputs: detect
      params:
        bump: patch
    - put: #@ component.name + "-release"
      inputs:
        #@ if component.buildable:
        - build
        #@ end
        - source
        - version
      params:
        name: version/version
        tag: version/version
        tag_prefix: v
        commitish: source/.git/ref
        generate_release_notes: true
        #@ if component.buildable:
        globs:
          - build/*
        #@ end

- name: #@ "test-" + component.name + "-pr"
  serial: true
  plan:
  - in_parallel:
    - get: source
      resource: #@ component.name + "-pull-requests"
      trigger: true
      version: every
      params:
        integration_tool: rebase
      on_success:
        put: #@ component.name + "-pull-requests"
        inputs: detect
        params:
          path: source
          status: pending
      on_failure:
        put: #@ component.name + "-pull-requests"
        inputs: detect
        params:
          path: source
          context: merge-conflict
          status: failure
    - get: #@ component.language
  - task: lint
    image: #@ component.language
    config:
      platform: linux
      inputs:
        - name: source
      run:
        dir: source
        path: make
        args: [lint]
    on_failure:
      put: #@ component.name + "-pull-requests"
      inputs: detect
      params:
        path: source
        status: failure
  - task: test
    image: #@ component.language
    config:
      platform: linux
      inputs:
        - name: source
      #@ if/end hasattr(component, 'env'):
      params: #@ component.env
      run:
        dir: source
        path: make
        args: [test]
    on_failure:
      put: #@ component.name + "-pull-requests"
      inputs: detect
      params:
        path: source
        status: failure
  - put: #@ component.name + "-pull-requests"
    inputs: detect
    params:
      path: source
      status: success
#@ end
